<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>build-monitor</artifactId>
        <version>1.13+build.202205140447</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>build-monitor-plugin</artifactId>
    <packaging>hpi</packaging>

    <name>Build Monitor View</name>
    <description>
        Provides a highly visible view of the status of selected Jenkins jobs.
        It easily accommodates different computer screen sizes and is ideal as an Extreme Feedback Device to be
        displayed on a screen on your office wall.
    </description>

    <licenses>
        <license>
            <name>MIT license</name>
            <comments>All source code is under the MIT license.</comments>
        </license>
    </licenses>

    <url>https://wiki.jenkins-ci.org/display/JENKINS/Build+Monitor+Plugin</url>

    <developers>
        <developer>
            <id>jan-molak</id>
            <name>Jan Molak</name>
            <email>jan.molak+build.monitor@smartcodeltd.co.uk</email>
            <organization>smartcode ltd</organization>
            <organizationUrl>http://smartcodeltd.co.uk</organizationUrl>
            <timezone>Europe/London</timezone>
        </developer>
    </developers>

    <!-- If you have contributed to the project, please feel free to add your details below! -->
    <contributors>

    </contributors>

    <scm>
        <connection>scm:git:ssh://github.com/jan-molak/jenkins-build-monitor-plugin.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/jan-molak/jenkins-build-monitor-plugin.git</developerConnection>
        <url>https://github.com/jan-molak/jenkins-build-monitor-plugin</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <node.version>v16.13.0</node.version>
        <npm.version>8.1.0</npm.version>
        <selenium.version>2.43.0</selenium.version>
        <build.number>DEV</build.number>
    </properties>

    <!-- get every artifact through repo.jenkins-ci.org, which proxies all the artifacts that we need -->
    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <distributionManagement>
        <repository>
            <id>maven.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/releases/</url>
        </repository>
    </distributionManagement>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.jenkins.tools.bom</groupId>
                <artifactId>bom-2.303.x</artifactId>
                <version>1370.vfa_e23fe119c3</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>jackson2-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jenkins-ci.modules</groupId>
            <artifactId>instance-identity</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Jenkins CI plugins supported by the Build Monitor -->
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>cloudbees-folder</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>credentials</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.sonyericsson.jenkins.plugins.bfa</groupId>
            <artifactId>build-failure-analyzer</artifactId>
            <version>1.27.1</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>claim</artifactId>
            <version>2.18.2</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>view-job-filters</artifactId>
            <version>2.3</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>badge</artifactId>
            <version>1.9.1</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-cps</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-job</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins.workflow</groupId>
            <artifactId>workflow-step-api</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>pipeline-stage-step</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>scm-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>structs</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>script-security</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>junit-realtime-test-reporter</artifactId>
            <version>90.v7dc2c937f9a_8</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.jenkins</groupId>
            <artifactId>configuration-as-code</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.jenkins.configuration-as-code</groupId>
            <artifactId>test-harness</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- /Jenkins CI plugins supported by the Build Monitor -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>biz.gabrys.maven.plugins</groupId>
                <artifactId>lesscss-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <sourceDirectory>${project.basedir}/src/main/webapp/less</sourceDirectory>
                        <includes>
                            <include>index.less</include>
                        </includes>
                <outputDirectory>${project.build.directory}/${project.build.finalName}/styles</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>compile-less</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.klieber</groupId>
                <artifactId>phantomjs-maven-plugin</artifactId>
                <version>0.7</version>
                <executions>
                    <execution>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <version>1.9.7</version>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Xmx4096m -XX:PermSize=256m -XX:MaxPermSize=2048m</argLine>
                    <systemProperties>
                        <property>
                            <name>hudson.udp</name>
                            <value>33849</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.smartcodeltd</groupId>
                <artifactId>release-candidate-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>version</goal>
                        </goals>
                        <configuration>
                            <outputTemplate>version={{ version }}</outputTemplate>
                            <outputUri>${project.baseUri}/target/classes/build-monitor.properties</outputUri>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.1</version>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <npmVersion>${npm.version}</npmVersion>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <arguments>install --silent</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>karma</id>
                        <goals>
                            <goal>karma</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <karmaConfPath>src/test/resources/karma.conf.ci.js</karmaConfPath>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <configuration>
                    <destFile>${project.build.directory}/coverage/jacoco-unit.exec</destFile>
                    <dataFile>${project.build.directory}/coverage/jacoco-unit.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-initialize</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-site</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
